{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-restangular/src/lib/ngx-restangular.config.ts","../../../projects/ngx-restangular/src/lib/ngx-restangular-helper.ts","../../../projects/ngx-restangular/src/lib/ngx-restangular-http.ts","../../../projects/ngx-restangular/src/lib/ngx-restangular-config.factory.ts","../../../projects/ngx-restangular/src/lib/ngx-restangular.ts","../../../projects/ngx-restangular/src/lib/ngx-restangular.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","RESTANGULAR","InjectionToken","RestangularFactory","_a","_b","callbackOrServices","callback","arrServices","fn","isArray","RestangularHelper","createRequest","options","requestQueryParams","createRequestQueryParams","params","requestHeaders","createRequestHeaders","headers","methodName","method","toUpperCase","withCredentials","request","HttpRequest","url","data","responseType","indexOf","queryParams","assign","search","HttpParams","key","Array","forEach","val","append","JSON","stringify","HttpHeaders","RestangularHttp","http","this","prototype","_this","handle","pipe","filter","event","HttpResponse","map","response","ok","throwError","HttpErrorResponse","config","catchError","err","repeatRequest","newRequest","RestangularConfigurer","object","configuration","safeMethods","isSafe","operation","includes","toLowerCase","absolutePattern","isAbsoluteUrl","string","isUndefined","absoluteUrl","isNull","test","setSelfLinkAbsoluteUrl","baseUrl","setBaseUrl","newBaseUrl","substring","extraFields","setExtraFields","newExtraFields","defaultHttpFields","setDefaultHttpFields","values","plainByDefault","setPlainByDefault","withHttpValues","httpLocalConfig","obj","defaults","encodeIds","setEncodeIds","encode","defaultRequestParams","get","post","put","remove","common","setDefaultRequestParams","param1","param2","methods","each","requestParams","defaultHeaders","setDefaultHeaders","defaultResponseMethod","setDefaultResponseMethod","methodOverriders","setMethodOverriders","overriders","extend","isOverridenMethod","jsonp","setJsonp","active","find","one","urlCreator","setUrlCreator","name","has","urlCreatorFactory","Error","restangularFields","id","route","parentResource","restangularCollection","cannonicalId","etag","selfLink","getList","head","trace","patch","getRestangularUrl","getRequestedUrl","putElement","addRestangularMethod","getParentList","clone","ids","httpConfig","reqParams","all","several","oneUrl","allUrl","customPUT","customPATCH","customPOST","customDELETE","customGET","customGETLIST","customOperation","doPUT","doPATCH","doPOST","doDELETE","doGET","doGETLIST","fromServer","withConfig","withHttpConfig","singleOne","plain","save","restangularized","setRestangularFields","resFields","isRestangularized","setFieldToElem","field","elem","properties","split","idValue","initial","prop","index","last","getFieldFromElem","setIdToElem","getIdFromElem","isValidId","elemId","setUrlToElem","getUrlFromElem","useCannonicalId","setUseCannonicalId","getCannonicalIdFromElem","responseInterceptors","defaultResponseInterceptor","responseExtractor","what","subject","interceptors","theData","interceptor","addResponseInterceptor","extractor","errorInterceptors","addErrorInterceptor","setResponseInterceptor","setResponseExtractor","setErrorInterceptor","requestInterceptors","defaultInterceptor","element","path","fullRequestInterceptor","defaultRequest","reduce","returnInterceptor","addRequestInterceptor","setRequestInterceptor","addFullRequestInterceptor","setFullRequestInterceptor","onBeforeElemRestangularized","setOnBeforeElemRestangularized","setRestangularizePromiseInterceptor","restangularizePromiseInterceptor","onElemRestangularized","setOnElemRestangularized","shouldSaveParent","setParentless","isBoolean","suffix","setRequestSuffix","newSuffix","transformers","addElementTransformer","type","secondArg","thirdArg","isCollection","transformer","typeTransformers","coll","extendCollection","extendModel","transformElem","Restangular","force","transformLocalElements","changedElem","setTransformOnlyServerElements","fullResponse","setFullResponse","full","BaseCreator","setConfig","parentsArray","current","parents","reverse","resource","$http","localHttpConfig","callHeaders","callParams","base","add","undefined","configurer","keys","isEmpty","resultConfig","RestangularResource","Path","normalizeUrl","parts","exec","replace","__this","acum","elemUrl","elemSelfLink","join","encodeURIComponent","fetchUrl","fetchRequestedUrl","encodeUriQuery","pctEncodeSpaces","context","sortedKeysArray","resultKeys","hasOwnProperty","sort","sortedKeys","forEachSorted","v","isObject","Injectable","HttpBackend","configObj","injector","provider","providerConfig","$get","setDefaultConfig","isFunction","arrDI","services","apply","globalConfiguration","createServiceForConfiguration","service","urlHandler","restangularizeBase","parent","bind","addRestangularMethodFunction","copyRestangularizedElement","stripRestangular","parentId","parentUrl","restangularFieldsForParent","union","pick","isNumber","restangularizeElem","restangularizeCollection","collection","splice","restangularizeResponse","valueToFill","res","resolvePromise","filledValue","complete","array_1","omit","addCustomOperation","customFunction","requestMethods","delete","requestFunc","callOperation","alias","fetchFunction","fromElement","toElement","copiedElement","localElem","getFunction","putFunction","postFunction","deleteFunction","headFunction","traceFunction","optionsFunction","patchFunction","putElementFunction","getById","toString","idx","elemToPut","BehaviorSubject","filledArray","subscribe","serverElem","newArray","parseResponse","resData","whatFetched","okCallback","body","fullParams","processedData","status","every","cb","elemFunction","resParams","callObj","filledObject","errorCallback","isOverrideOperation","X-HTTP-Method-Override","defaultParams","defaultElem","bindedFunction","createdFunction","copy","knownCollectionMethods","serv","newConfig","restangularizeElement","Optional","Inject","args","Injector","CONFIG_OBJ","RestangularModule","parentModule","forRoot","config1","config2","ngModule","providers","provide","useValue","useFactory","deps","NgModule","imports","HttpClientModule","decorators","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nimport { isArray } from 'lodash';\n\n\nexport const RESTANGULAR = new InjectionToken<string>('restangularWithConfig');\n\nexport function RestangularFactory([callbackOrServices, callback]) {\n  let arrServices = [];\n  let fn = callbackOrServices;\n\n  if (isArray(callbackOrServices)) {\n    arrServices = callbackOrServices;\n    fn = callback;\n  }\n\n  return {fn, arrServices};\n}\n","import { HttpRequest, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { assign } from 'lodash';\n\nexport class RestangularHelper {\n\n  static createRequest(options) {\n    const requestQueryParams = RestangularHelper.createRequestQueryParams(options.params);\n    const requestHeaders = RestangularHelper.createRequestHeaders(options.headers);\n    const methodName = options.method.toUpperCase();\n    const withCredentials = options.withCredentials || false;\n\n    let request = new HttpRequest(\n      methodName,\n      options.url,\n      options.data,\n      {\n        headers: requestHeaders,\n        params: requestQueryParams,\n        responseType: options.responseType,\n        withCredentials\n      }\n    );\n\n    if (['GET', 'DELETE', 'HEAD', 'JSONP', 'OPTIONS'].indexOf(methodName) >= 0) {\n      request = new HttpRequest(\n        methodName,\n        options.url,\n        {\n          headers: requestHeaders,\n          params: requestQueryParams,\n          responseType: options.responseType,\n          withCredentials\n        }\n      );\n    }\n    return request;\n  }\n\n  static createRequestQueryParams(queryParams) {\n    const requestQueryParams = assign({}, queryParams);\n    let search: HttpParams = new HttpParams();\n\n    for (const key in requestQueryParams) {\n      let value: any = requestQueryParams[key];\n\n      if (Array.isArray(value)) {\n        value.forEach(function (val) {\n          search = search.append(key, val);\n        });\n      } else {\n        if (typeof value === 'object') {\n          value = JSON.stringify(value);\n        }\n        search = search.append(key, value);\n      }\n    }\n\n    return search;\n  }\n\n  static createRequestHeaders(headers) {\n    for (const key in headers) {\n      const value: any = headers[key];\n      if (typeof value === 'undefined') {\n        delete headers[key];\n      }\n    }\n\n    return new HttpHeaders(assign({}, headers));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpBackend, HttpErrorResponse, HttpEvent, HttpRequest, HttpResponse } from '@angular/common/http';\n\nimport { throwError, Observable } from 'rxjs';\n\nimport { RestangularHelper } from './ngx-restangular-helper';\nimport { catchError, filter, map } from 'rxjs/operators';\n\n@Injectable()\nexport class RestangularHttp {\n\n  constructor(public http: HttpBackend) {\n  }\n\n  createRequest(options): Observable<HttpEvent<any>> {\n    const request = RestangularHelper.createRequest(options);\n\n    return this.request(request);\n  }\n\n  request(request: HttpRequest<any>): Observable<HttpEvent<any>> {\n    return this.http.handle(request)\n    .pipe(\n      filter(event => event instanceof HttpResponse),\n      map((response: any) => {\n        if (!response.ok) {\n          return throwError(new HttpErrorResponse(response));\n        }\n        return response;\n      }),\n      map(response => {\n        response.config = {params: request};\n        return response;\n      }),\n      catchError(err => {\n        err.request = request;\n        err.data = err.error;\n        err.repeatRequest = (newRequest?) => {\n          return this.request(newRequest || request);\n        };\n\n        return throwError(err);\n      })\n    );\n  }\n}\n\n","import {\n  includes,\n  isUndefined,\n  isNull,\n  isArray,\n  isObject,\n  isBoolean,\n  defaults,\n  each,\n  extend,\n  find,\n  has,\n  initial,\n  last,\n  clone,\n  reduce,\n  keys,\n  isEmpty,\n  forEach,\n} from 'lodash';\n\nexport function RestangularConfigurer(object, configuration) {\n  object.configuration = configuration;\n\n  /**\n   * Those are HTTP safe methods for which there is no need to pass any data with the request.\n   */\n  const safeMethods = ['get', 'head', 'options', 'trace', 'getlist'];\n  configuration.isSafe = function (operation) {\n    return includes(safeMethods, operation.toLowerCase());\n  };\n\n  const absolutePattern = /^https?:\\/\\//i;\n  configuration.isAbsoluteUrl = function (string) {\n    return isUndefined(configuration.absoluteUrl) || isNull(configuration.absoluteUrl) ?\n      string && absolutePattern.test(string) :\n      configuration.absoluteUrl;\n  };\n\n  configuration.absoluteUrl = isUndefined(configuration.absoluteUrl) ? true : configuration.absoluteUrl;\n  object.setSelfLinkAbsoluteUrl = function (value) {\n    configuration.absoluteUrl = value;\n  };\n  /**\n   * This is the BaseURL to be used with Restangular\n   */\n  configuration.baseUrl = isUndefined(configuration.baseUrl) ? '' : configuration.baseUrl;\n  object.setBaseUrl = function (newBaseUrl) {\n    configuration.baseUrl = /\\/$/.test(newBaseUrl) ?\n      newBaseUrl.substring(0, newBaseUrl.length - 1) :\n      newBaseUrl;\n    return this;\n  };\n\n  /**\n   * Sets the extra fields to keep from the parents\n   */\n  configuration.extraFields = configuration.extraFields || [];\n  object.setExtraFields = function (newExtraFields) {\n    configuration.extraFields = newExtraFields;\n    return this;\n  };\n\n  /**\n   * Some default $http parameter to be used in EVERY call\n   **/\n  configuration.defaultHttpFields = configuration.defaultHttpFields || {};\n  object.setDefaultHttpFields = function (values) {\n    configuration.defaultHttpFields = values;\n    return this;\n  };\n\n  /**\n   * Always return plain data, no restangularized object\n   **/\n  configuration.plainByDefault = configuration.plainByDefault || false;\n  object.setPlainByDefault = function (value) {\n    configuration.plainByDefault = value === true ? true : false;\n    return this;\n  };\n\n  configuration.withHttpValues = function (httpLocalConfig, obj) {\n    return defaults(obj, httpLocalConfig, configuration.defaultHttpFields);\n  };\n\n  configuration.encodeIds = isUndefined(configuration.encodeIds) ? true : configuration.encodeIds;\n  object.setEncodeIds = function (encode) {\n    configuration.encodeIds = encode;\n  };\n\n  configuration.defaultRequestParams = configuration.defaultRequestParams || {\n    get: {},\n    post: {},\n    put: {},\n    remove: {},\n    common: {}\n  };\n\n  object.setDefaultRequestParams = function (param1, param2) {\n    let methods = [];\n    const params = param2 || param1;\n    if (!isUndefined(param2)) {\n      if (isArray(param1)) {\n        methods = param1;\n      } else {\n        methods.push(param1);\n      }\n    } else {\n      methods.push('common');\n    }\n\n    each(methods, function (method) {\n      configuration.defaultRequestParams[method] = params;\n    });\n    return this;\n  };\n\n  object.requestParams = configuration.defaultRequestParams;\n\n  configuration.defaultHeaders = configuration.defaultHeaders || {};\n  object.setDefaultHeaders = function (headers) {\n    configuration.defaultHeaders = headers;\n    object.defaultHeaders = configuration.defaultHeaders;\n    return this;\n  };\n\n  object.defaultHeaders = configuration.defaultHeaders;\n\n\n  /**\n   * Method overriders response Method\n   **/\n  configuration.defaultResponseMethod = configuration.defaultResponseMethod || 'promise';\n  object.setDefaultResponseMethod = function (method) {\n    configuration.defaultResponseMethod = method;\n    object.defaultResponseMethod = configuration.defaultResponseMethod;\n    return this;\n  };\n  object.defaultResponseMethod = configuration.defaultResponseMethod;\n\n  /**\n   * Method overriders will set which methods are sent via POST with an X-HTTP-Method-Override\n   **/\n  configuration.methodOverriders = configuration.methodOverriders || [];\n  object.setMethodOverriders = function (values) {\n    const overriders = extend([], values);\n    if (configuration.isOverridenMethod('delete', overriders)) {\n      overriders.push('remove');\n    }\n    configuration.methodOverriders = overriders;\n    return this;\n  };\n\n  configuration.jsonp = isUndefined(configuration.jsonp) ? false : configuration.jsonp;\n  object.setJsonp = function (active) {\n    configuration.jsonp = active;\n  };\n\n  configuration.isOverridenMethod = function (method, values) {\n    const search = values || configuration.methodOverriders;\n    return !isUndefined(find(search, function (one: string) {\n      return one.toLowerCase() === method.toLowerCase();\n    }));\n  };\n\n  /**\n   * Sets the URL creator type. For now, only Path is created. In the future we'll have queryParams\n   **/\n  configuration.urlCreator = configuration.urlCreator || 'path';\n  object.setUrlCreator = function (name) {\n    if (!has(configuration.urlCreatorFactory, name)) {\n      throw new Error('URL Path selected isn\\'t valid');\n    }\n\n    configuration.urlCreator = name;\n    return this;\n  };\n\n  /**\n   * You can set the restangular fields here. The 3 required fields for Restangular are:\n   *\n   * id: Id of the element\n   * route: name of the route of this element\n   * parentResource: the reference to the parent resource\n   *\n   *  All of this fields except for id, are handled (and created) by Restangular. By default,\n   *  the field values will be id, route and parentResource respectively\n   */\n  configuration.restangularFields = configuration.restangularFields || {\n    id: 'id',\n    route: 'route',\n    parentResource: 'parentResource',\n    restangularCollection: 'restangularCollection',\n    cannonicalId: '__cannonicalId',\n    etag: 'restangularEtag',\n    selfLink: 'href',\n    get: 'get',\n    getList: 'getList',\n    put: 'put',\n    post: 'post',\n    remove: 'remove',\n    head: 'head',\n    trace: 'trace',\n    options: 'options',\n    patch: 'patch',\n    getRestangularUrl: 'getRestangularUrl',\n    getRequestedUrl: 'getRequestedUrl',\n    putElement: 'putElement',\n    addRestangularMethod: 'addRestangularMethod',\n    getParentList: 'getParentList',\n    clone: 'clone',\n    ids: 'ids',\n    httpConfig: '_$httpConfig',\n    reqParams: 'reqParams',\n    one: 'one',\n    all: 'all',\n    several: 'several',\n    oneUrl: 'oneUrl',\n    allUrl: 'allUrl',\n    customPUT: 'customPUT',\n    customPATCH: 'customPATCH',\n    customPOST: 'customPOST',\n    customDELETE: 'customDELETE',\n    customGET: 'customGET',\n    customGETLIST: 'customGETLIST',\n    customOperation: 'customOperation',\n    doPUT: 'doPUT',\n    doPATCH: 'doPATCH',\n    doPOST: 'doPOST',\n    doDELETE: 'doDELETE',\n    doGET: 'doGET',\n    doGETLIST: 'doGETLIST',\n    fromServer: 'fromServer',\n    withConfig: 'withConfig',\n    withHttpConfig: 'withHttpConfig',\n    singleOne: 'singleOne',\n    plain: 'plain',\n    save: 'save',\n    restangularized: 'restangularized'\n  };\n  object.setRestangularFields = function (resFields) {\n    configuration.restangularFields =\n      extend({}, configuration.restangularFields, resFields);\n    return this;\n  };\n\n  configuration.isRestangularized = function (obj) {\n    return !!obj[configuration.restangularFields.restangularized];\n  };\n\n  configuration.setFieldToElem = function (field, elem, value) {\n    const properties = field.split('.');\n    let idValue = elem;\n    each(initial(properties), function (prop: any) {\n      idValue[prop] = {};\n      idValue = idValue[prop];\n    });\n    const index: any = last(properties);\n    idValue[index] = value;\n    return this;\n  };\n\n  configuration.getFieldFromElem = function (field, elem) {\n    const properties = field.split('.');\n    let idValue: any = elem;\n    each(properties, function (prop) {\n      if (idValue) {\n        idValue = idValue[prop];\n      }\n    });\n    return clone(idValue);\n  };\n\n  configuration.setIdToElem = function (elem, id /*, route */) {\n    configuration.setFieldToElem(configuration.restangularFields.id, elem, id);\n    return this;\n  };\n\n  configuration.getIdFromElem = function (elem) {\n    return configuration.getFieldFromElem(configuration.restangularFields.id, elem);\n  };\n\n  configuration.isValidId = function (elemId) {\n    return '' !== elemId && !isUndefined(elemId) && !isNull(elemId);\n  };\n\n  configuration.setUrlToElem = function (elem, url /*, route */) {\n    configuration.setFieldToElem(configuration.restangularFields.selfLink, elem, url);\n    return this;\n  };\n\n  configuration.getUrlFromElem = function (elem) {\n    return configuration.getFieldFromElem(configuration.restangularFields.selfLink, elem);\n  };\n\n  configuration.useCannonicalId = isUndefined(configuration.useCannonicalId) ? false : configuration.useCannonicalId;\n  object.setUseCannonicalId = function (value) {\n    configuration.useCannonicalId = value;\n    return this;\n  };\n\n  configuration.getCannonicalIdFromElem = function (elem) {\n    const cannonicalId = elem[configuration.restangularFields.cannonicalId];\n    const actualId = configuration.isValidId(cannonicalId) ? cannonicalId : configuration.getIdFromElem(elem);\n    return actualId;\n  };\n\n  /**\n   * Sets the Response parser. This is used in case your response isn't directly the data.\n   * For example if you have a response like {meta: {'meta'}, data: {name: 'Gonto'}}\n   * you can extract this data which is the one that needs wrapping\n   *\n   * The ResponseExtractor is a function that receives the response and the method executed.\n   */\n\n  configuration.responseInterceptors = configuration.responseInterceptors ? [...configuration.responseInterceptors] : [];\n\n  configuration.defaultResponseInterceptor = function (data /*, operation, what, url, response, subject */) {\n    return data || {};\n  };\n\n  configuration.responseExtractor = function (data, operation, what, url, response, subject) {\n    const interceptors = clone(configuration.responseInterceptors);\n    interceptors.push(configuration.defaultResponseInterceptor);\n    let theData = data;\n    each(interceptors, function (interceptor: any) {\n      theData = interceptor(theData, operation,\n        what, url, response, subject);\n    });\n    return theData;\n  };\n\n  object.addResponseInterceptor = function (extractor) {\n    configuration.responseInterceptors.push(extractor);\n    return this;\n  };\n\n  configuration.errorInterceptors = configuration.errorInterceptors ? [...configuration.errorInterceptors] : [];\n  object.addErrorInterceptor = function (interceptor) {\n    configuration.errorInterceptors = [interceptor, ...configuration.errorInterceptors];\n    return this;\n  };\n\n  object.setResponseInterceptor = object.addResponseInterceptor;\n  object.setResponseExtractor = object.addResponseInterceptor;\n  object.setErrorInterceptor = object.addErrorInterceptor;\n\n  /**\n   * Response interceptor is called just before resolving promises.\n   */\n\n\n  /**\n   * Request interceptor is called before sending an object to the server.\n   */\n  configuration.requestInterceptors = configuration.requestInterceptors ? [...configuration.requestInterceptors] : [];\n\n  configuration.defaultInterceptor = function (element, operation, path, url, headers, params, httpConfig) {\n    return {\n      element: element,\n      headers: headers,\n      params: params,\n      httpConfig: httpConfig\n    };\n  };\n\n  configuration.fullRequestInterceptor = function (element, operation, path, url, headers, params, httpConfig) {\n    const interceptors = clone(configuration.requestInterceptors);\n    const defaultRequest = configuration.defaultInterceptor(element, operation, path, url, headers, params, httpConfig);\n    return reduce(interceptors, function (request: any, interceptor: any) {\n\n      const returnInterceptor: any = interceptor(\n        request.element,\n        operation,\n        path,\n        url,\n        request.headers,\n        request.params,\n        request.httpConfig\n      );\n      return extend(request, returnInterceptor);\n    }, defaultRequest);\n  };\n\n  object.addRequestInterceptor = function (interceptor) {\n    configuration.requestInterceptors.push(function (elem, operation, path, url, headers, params, httpConfig) {\n      return {\n        headers: headers,\n        params: params,\n        element: interceptor(elem, operation, path, url),\n        httpConfig: httpConfig\n      };\n    });\n    return this;\n  };\n\n  object.setRequestInterceptor = object.addRequestInterceptor;\n\n  object.addFullRequestInterceptor = function (interceptor) {\n    configuration.requestInterceptors.push(interceptor);\n    return this;\n  };\n\n  object.setFullRequestInterceptor = object.addFullRequestInterceptor;\n\n  configuration.onBeforeElemRestangularized = configuration.onBeforeElemRestangularized || function (elem) {\n    return elem;\n  };\n  object.setOnBeforeElemRestangularized = function (post) {\n    configuration.onBeforeElemRestangularized = post;\n    return this;\n  };\n\n  object.setRestangularizePromiseInterceptor = function (interceptor) {\n    configuration.restangularizePromiseInterceptor = interceptor;\n    return this;\n  };\n\n  /**\n   * This method is called after an element has been \"Restangularized\".\n   *\n   * It receives the element, a boolean indicating if it's an element or a collection\n   * and the name of the model\n   *\n   */\n  configuration.onElemRestangularized = configuration.onElemRestangularized || function (elem) {\n    return elem;\n  };\n  object.setOnElemRestangularized = function (post) {\n    configuration.onElemRestangularized = post;\n    return this;\n  };\n\n  configuration.shouldSaveParent = configuration.shouldSaveParent || function () {\n    return true;\n  };\n  object.setParentless = function (values) {\n    if (isArray(values)) {\n      configuration.shouldSaveParent = function (route) {\n        return !includes(values, route);\n      };\n    } else if (isBoolean(values)) {\n      configuration.shouldSaveParent = function () {\n        return !values;\n      };\n    }\n    return this;\n  };\n\n  /**\n   * This lets you set a suffix to every request.\n   *\n   * For example, if your api requires that for JSon requests you do /users/123.json, you can set that\n   * in here.\n   *\n   *\n   * By default, the suffix is null\n   */\n  configuration.suffix = isUndefined(configuration.suffix) ? null : configuration.suffix;\n  object.setRequestSuffix = function (newSuffix) {\n    configuration.suffix = newSuffix;\n    return this;\n  };\n\n  /**\n   * Add element transformers for certain routes.\n   */\n  configuration.transformers = configuration.transformers || {};\n  object.addElementTransformer = function (type, secondArg, thirdArg) {\n    let isCollection = null;\n    let transformer = null;\n    if (arguments.length === 2) {\n      transformer = secondArg;\n    } else {\n      transformer = thirdArg;\n      isCollection = secondArg;\n    }\n\n    let typeTransformers = configuration.transformers[type];\n    if (!typeTransformers) {\n      typeTransformers = configuration.transformers[type] = [];\n    }\n\n    typeTransformers.push(function (coll, elem) {\n      if (isNull(isCollection) || (coll === isCollection)) {\n        return transformer(elem);\n      }\n      return elem;\n    });\n\n    return object;\n  };\n\n  object.extendCollection = function (route, fn) {\n    return object.addElementTransformer(route, true, fn);\n  };\n\n  object.extendModel = function (route, fn) {\n    return object.addElementTransformer(route, false, fn);\n  };\n\n  configuration.transformElem = function (elem, isCollection, route, Restangular, force) {\n    if (!force && !configuration.transformLocalElements && !elem[configuration.restangularFields.fromServer]) {\n      return elem;\n    }\n    const typeTransformers = configuration.transformers[route];\n    let changedElem = elem;\n    if (typeTransformers) {\n      each(typeTransformers, function (transformer: (isCollection: boolean, changedElem: any) => any) {\n        changedElem = transformer(isCollection, changedElem);\n      });\n    }\n    return configuration.onElemRestangularized(changedElem, isCollection, route, Restangular);\n  };\n\n  configuration.transformLocalElements = isUndefined(configuration.transformLocalElements) ?\n    false :\n    configuration.transformLocalElements;\n\n  object.setTransformOnlyServerElements = function (active) {\n    configuration.transformLocalElements = !active;\n  };\n\n  configuration.fullResponse = isUndefined(configuration.fullResponse) ? false : configuration.fullResponse;\n  object.setFullResponse = function (full) {\n    configuration.fullResponse = full;\n    return this;\n  };\n\n\n  // Internal values and functions\n  configuration.urlCreatorFactory = {};\n\n  /**\n   * Base URL Creator. Base prototype for everything related to it\n   **/\n\n  const BaseCreator = function () {\n  };\n\n  BaseCreator.prototype.setConfig = function (config) {\n    this.config = config;\n    return this;\n  };\n\n  BaseCreator.prototype.parentsArray = function (current) {\n    const parents = [];\n    while (current) {\n      parents.push(current);\n      current = current[this.config.restangularFields.parentResource];\n    }\n    return parents.reverse();\n  };\n\n  function RestangularResource(config, $http, url, configurer) {\n    const resource = {};\n    each(keys(configurer), function (key) {\n      const value = configurer[key];\n\n      // Add default parameters\n      value.params = extend({}, value.params, config.defaultRequestParams[value.method.toLowerCase()]);\n      // We don't want the ? if no params are there\n      if (isEmpty(value.params)) {\n        delete value.params;\n      }\n\n      if (config.isSafe(value.method)) {\n\n        resource[key] = function () {\n          const resultConfig = extend(value, {\n            url: url\n          });\n          return $http.createRequest(resultConfig);\n        };\n\n      } else {\n\n        resource[key] = function (data) {\n          const resultConfig = extend(value, {\n            url: url,\n            data: data\n          });\n          return $http.createRequest(resultConfig);\n        };\n\n      }\n    });\n\n    return resource;\n  }\n\n  BaseCreator.prototype.resource = function (current, $http, localHttpConfig, callHeaders, callParams, what, etag, operation) {\n    const params = defaults(callParams || {}, this.config.defaultRequestParams.common);\n    const headers = defaults(callHeaders || {}, this.config.defaultHeaders);\n\n    if (etag) {\n      if (!configuration.isSafe(operation)) {\n        headers['If-Match'] = etag;\n      } else {\n        headers['If-None-Match'] = etag;\n      }\n    }\n\n    let url = this.base(current);\n\n    if (what) {\n      let add = '';\n      if (!/\\/$/.test(url)) {\n        add += '/';\n      }\n      add += what;\n      url += add;\n    }\n\n    if (this.config.suffix &&\n      url.indexOf(this.config.suffix, url.length - this.config.suffix.length) === -1 && !this.config.getUrlFromElem(current)) {\n      url += this.config.suffix;\n    }\n\n    current[this.config.restangularFields.httpConfig] = undefined;\n\n    return RestangularResource(this.config, $http, url, {\n      getList: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'GET',\n          params: params,\n          headers: headers\n        }),\n\n      get: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'GET',\n          params: params,\n          headers: headers\n        }),\n\n      jsonp: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'jsonp',\n          params: params,\n          headers: headers\n        }),\n\n      put: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'PUT',\n          params: params,\n          headers: headers\n        }),\n\n      post: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'POST',\n          params: params,\n          headers: headers\n        }),\n\n      remove: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'DELETE',\n          params: params,\n          headers: headers\n        }),\n\n      head: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'HEAD',\n          params: params,\n          headers: headers\n        }),\n\n      trace: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'TRACE',\n          params: params,\n          headers: headers\n        }),\n\n      options: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'OPTIONS',\n          params: params,\n          headers: headers\n        }),\n\n      patch: this.config.withHttpValues(localHttpConfig,\n        {\n          method: 'PATCH',\n          params: params,\n          headers: headers\n        })\n    });\n  };\n\n  /**\n   * This is the Path URL creator. It uses Path to show Hierarchy in the Rest API.\n   * This means that if you have an Account that then has a set of Buildings, a URL to a building\n   * would be /accounts/123/buildings/456\n   **/\n  const Path = function () {\n  };\n\n  Path.prototype = new BaseCreator();\n\n  Path.prototype.normalizeUrl = function (url) {\n    const parts = /((?:http[s]?:)?\\/\\/)?(.*)?/.exec(url);\n    parts[2] = parts[2].replace(/[\\\\\\/]+/g, '/');\n    return (typeof parts[1] !== 'undefined') ? parts[1] + parts[2] : parts[2];\n  };\n\n  Path.prototype.base = function (current) {\n    const __this = this;\n    return reduce(this.parentsArray(current), function (acum: any, elem: any) {\n      let elemUrl;\n      const elemSelfLink = __this.config.getUrlFromElem(elem);\n      if (elemSelfLink) {\n        if (__this.config.isAbsoluteUrl(elemSelfLink)) {\n          return elemSelfLink;\n        } else {\n          elemUrl = elemSelfLink;\n        }\n      } else {\n        elemUrl = elem[__this.config.restangularFields.route];\n\n        if (elem[__this.config.restangularFields.restangularCollection]) {\n          const ids = elem[__this.config.restangularFields.ids];\n          if (ids) {\n            elemUrl += '/' + ids.join(',');\n          }\n        } else {\n          let elemId: any;\n          if (__this.config.useCannonicalId) {\n            elemId = __this.config.getCannonicalIdFromElem(elem);\n          } else {\n            elemId = __this.config.getIdFromElem(elem);\n          }\n\n          if (configuration.isValidId(elemId) && !elem.singleOne) {\n            elemUrl += '/' + (__this.config.encodeIds ? encodeURIComponent(elemId) : elemId);\n          }\n        }\n      }\n      acum = acum.replace(/\\/$/, '') + '/' + elemUrl;\n      return __this.normalizeUrl(acum);\n\n    }, this.config.baseUrl);\n  };\n\n\n  Path.prototype.fetchUrl = function (current, what) {\n    let baseUrl = this.base(current);\n    if (what) {\n      baseUrl += '/' + what;\n    }\n    return baseUrl;\n  };\n\n  Path.prototype.fetchRequestedUrl = function (current, what) {\n    const url = this.fetchUrl(current, what);\n    const params = current[configuration.restangularFields.reqParams];\n\n    // From here on and until the end of fetchRequestedUrl,\n    // the code has been kindly borrowed from angular.js\n    // The reason for such code bloating is coherence:\n    //   If the user were to use this for cache management, the\n    //   serialization of parameters would need to be identical\n    //   to the one done by angular for cache keys to match.\n    function sortedKeys(obj) {\n      const resultKeys = [];\n      for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          resultKeys.push(key);\n        }\n      }\n      return resultKeys.sort();\n    }\n\n    function forEachSorted(obj, iterator?, context?) {\n      const sortedKeysArray = sortedKeys(obj);\n      for (let i = 0; i < sortedKeysArray.length; i++) {\n        iterator.call(context, obj[sortedKeysArray[i]], sortedKeysArray[i]);\n      }\n      return sortedKeysArray;\n    }\n\n    function encodeUriQuery(val, pctEncodeSpaces?) {\n      return encodeURIComponent(val)\n      .replace(/%40/gi, '@')\n      .replace(/%3A/gi, ':')\n      .replace(/%24/g, '$')\n      .replace(/%2C/gi, ',')\n      .replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'));\n    }\n\n    if (!params) {\n      return url + (this.config.suffix || '');\n    }\n\n    const parts = [];\n    forEachSorted(params, function (value, key) {\n      if (value === null || value === undefined) {\n        return;\n      }\n      if (!isArray(value)) {\n        value = [value];\n      }\n\n      forEach(value, function (v) {\n        if (isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encodeUriQuery(key) + '=' + encodeUriQuery(v));\n      });\n    });\n\n    return url + (this.config.suffix || '') + ((url.indexOf('?') === -1) ? '?' : '&') + parts.join('&');\n  };\n\n  configuration.urlCreatorFactory.path = Path;\n}\n","import { Injectable, Inject, Injector, Optional, Type } from '@angular/core';\nimport {\n  assign,\n  map,\n  bind,\n  union,\n  values,\n  pick,\n  isEmpty,\n  isFunction,\n  isNumber,\n  isUndefined,\n  isArray,\n  isObject,\n  extend,\n  each,\n  every,\n  omit,\n  get,\n  defaults,\n  clone,\n  includes\n} from 'lodash';\n\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { RESTANGULAR } from './ngx-restangular.config';\nimport { RestangularHttp } from './ngx-restangular-http';\nimport { RestangularConfigurer } from './ngx-restangular-config.factory';\n\n@Injectable()\nexport class Restangular {\n  provider: {\n    setBaseUrl: any,\n    setDefaultHeaders: any,\n    configuration: any,\n    setSelfLinkAbsoluteUrl: any,\n    setExtraFields: any,\n    setDefaultHttpFields: any,\n    setPlainByDefault: any,\n    setEncodeIds: any,\n    setDefaultRequestParams: any,\n    requestParams: any,\n    defaultHeaders: any,\n    setDefaultResponseMethod: any,\n    defaultResponseMethod: any,\n    setMethodOverriders: any,\n    setJsonp: any,\n    setUrlCreator: any,\n    setRestangularFields: any,\n    setUseCannonicalId: any,\n    addResponseInterceptor: any,\n    addErrorInterceptor: any,\n    setResponseInterceptor: any,\n    setResponseExtractor: any,\n    setErrorInterceptor: any,\n    addRequestInterceptor: any,\n    setRequestInterceptor: any,\n    setFullRequestInterceptor: any,\n    addFullRequestInterceptor: any,\n    setOnBeforeElemRestangularized: any,\n    setRestangularizePromiseInterceptor: any,\n    setOnElemRestangularized: any,\n    setParentless: any,\n    setRequestSuffix: any,\n    addElementTransformer: any,\n    extendCollection: any,\n    extendModel: any,\n    setTransformOnlyServerElements: any,\n    setFullResponse: any,\n    $get: any\n  };\n  addElementTransformer: any;\n  extendCollection: any;\n  extendModel: any;\n  copy;\n  configuration;\n  service;\n  id;\n  route;\n  parentResource;\n  restangularCollection;\n  cannonicalId;\n  etag;\n  selfLink;\n  get;\n  getList;\n  put;\n  post;\n  remove;\n  head;\n  trace;\n  options;\n  patch;\n  getRestangularUrl;\n  getRequestedUrl;\n  putElement;\n  addRestangularMethod;\n  getParentList;\n  clone;\n  ids;\n  httpConfig;\n  reqParams;\n  one;\n  all;\n  several;\n  oneUrl;\n  allUrl;\n  customPUT;\n  customPATCH;\n  customPOST;\n  customDELETE;\n  customGET;\n  customGETLIST;\n  customOperation;\n  doPUT;\n  doPATCH;\n  doPOST;\n  doDELETE;\n  doGET;\n  doGETLIST;\n  fromServer;\n  withConfig;\n  withHttpConfig;\n  singleOne;\n  plain;\n  save;\n  restangularized;\n  restangularizeElement;\n  restangularizeCollection;\n\n  constructor(\n    @Optional() @Inject(RESTANGULAR) public configObj,\n    private injector: Injector,\n    private http: RestangularHttp\n  ) {\n    this.provider = new providerConfig(http);\n    const element = this.provider.$get();\n    assign(this, element);\n\n    this.setDefaultConfig();\n  }\n\n  setDefaultConfig() {\n    if (!this.configObj || !isFunction(this.configObj.fn)) {\n      return;\n    }\n\n    const arrDI = map(this.configObj.arrServices, (services: Type<any>) => {\n      return this.injector.get(services);\n    });\n\n    this.configObj.fn(...[this.provider, ...arrDI]);\n  }\n}\n\nfunction providerConfig($http) {\n  const globalConfiguration = {};\n\n  RestangularConfigurer(this, globalConfiguration);\n\n  this.$get = $get;\n\n  function $get() {\n\n    function createServiceForConfiguration(config) {\n      const service: any = {};\n\n      const urlHandler = new config.urlCreatorFactory[config.urlCreator]();\n      urlHandler.setConfig(config);\n\n      function restangularizeBase(parent, elem, route, reqParams, fromServer) {\n        elem[config.restangularFields.route] = route;\n        elem[config.restangularFields.getRestangularUrl] = bind(urlHandler.fetchUrl, urlHandler, elem);\n        elem[config.restangularFields.getRequestedUrl] = bind(urlHandler.fetchRequestedUrl, urlHandler, elem);\n        elem[config.restangularFields.addRestangularMethod] = bind(addRestangularMethodFunction, elem);\n        elem[config.restangularFields.clone] = bind(copyRestangularizedElement, elem);\n        elem[config.restangularFields.reqParams] = isEmpty(reqParams) ? null : reqParams;\n        elem[config.restangularFields.withHttpConfig] = bind(withHttpConfig, elem);\n        elem[config.restangularFields.plain] = bind(stripRestangular, elem, elem);\n\n        // Tag element as restangularized\n        elem[config.restangularFields.restangularized] = true;\n\n        // RequestLess connection\n        elem[config.restangularFields.one] = bind(one, elem, elem);\n        elem[config.restangularFields.all] = bind(all, elem, elem);\n        elem[config.restangularFields.several] = bind(several, elem, elem);\n        elem[config.restangularFields.oneUrl] = bind(oneUrl, elem, elem);\n        elem[config.restangularFields.allUrl] = bind(allUrl, elem, elem);\n\n        elem[config.restangularFields.fromServer] = !!fromServer;\n\n        if (parent && config.shouldSaveParent(route)) {\n          const parentId = config.getIdFromElem(parent);\n          const parentUrl = config.getUrlFromElem(parent);\n\n          const restangularFieldsForParent = union(\n            values(pick(config.restangularFields, ['route', 'singleOne', 'parentResource'])),\n            config.extraFields\n          );\n          const parentResource = pick(parent, restangularFieldsForParent);\n\n          if (config.isValidId(parentId)) {\n            config.setIdToElem(parentResource, parentId, route);\n          }\n          if (config.isValidId(parentUrl)) {\n            config.setUrlToElem(parentResource, parentUrl, route);\n          }\n\n          elem[config.restangularFields.parentResource] = parentResource;\n        } else {\n          elem[config.restangularFields.parentResource] = null;\n        }\n        return elem;\n      }\n\n      function one(parent, route, id, singleOne) {\n        let error;\n        if (isNumber(route) || isNumber(parent)) {\n          error = 'You\\'re creating a Restangular entity with the number ';\n          error += 'instead of the route or the parent. For example, you can\\'t call .one(12).';\n          throw new Error(error);\n        }\n        if (isUndefined(route)) {\n          error = 'You\\'re creating a Restangular entity either without the path. ';\n          error += 'For example you can\\'t call .one(). Please check if your arguments are valid.';\n          throw new Error(error);\n        }\n        const elem = {};\n        config.setIdToElem(elem, id, route);\n        config.setFieldToElem(config.restangularFields.singleOne, elem, singleOne);\n        return restangularizeElem(parent, elem, route, false);\n      }\n\n      function all(parent, route) {\n        return restangularizeCollection(parent, [], route, false);\n      }\n\n      function several(parent, route /*, ids */) {\n        const collection = [];\n        collection[config.restangularFields.ids] = Array.prototype.splice.call(arguments, 2);\n        return restangularizeCollection(parent, collection, route, false);\n      }\n\n      function oneUrl(parent, route, url) {\n        if (!route) {\n          throw new Error('Route is mandatory when creating new Restangular objects.');\n        }\n        const elem = {};\n        config.setUrlToElem(elem, url, route);\n        return restangularizeElem(parent, elem, route, false);\n      }\n\n      function allUrl(parent, route, url) {\n        if (!route) {\n          throw new Error('Route is mandatory when creating new Restangular objects.');\n        }\n        const elem = {};\n        config.setUrlToElem(elem, url, route);\n        return restangularizeCollection(parent, elem, route, false);\n      }\n\n      // Promises\n      function restangularizeResponse(subject, isCollection, valueToFill) {\n        return subject.pipe(filter(res => !!res));\n      }\n\n      function resolvePromise(subject, response, data, filledValue) {\n        extend(filledValue, data);\n\n        // Trigger the full response interceptor.\n        if (config.fullResponse) {\n          subject.next(extend(response, {\n            data: data\n          }));\n        } else {\n          subject.next(data);\n        }\n\n        subject.complete();\n      }\n\n      // Elements\n      function stripRestangular(elem) {\n        if (isArray(elem)) {\n          const array = [];\n          each(elem, function (value) {\n            array.push(config.isRestangularized(value) ? stripRestangular(value) : value);\n          });\n          return array;\n        } else {\n          return omit(elem, values(omit(config.restangularFields, 'id')));\n        }\n      }\n\n      function addCustomOperation(elem) {\n        elem[config.restangularFields.customOperation] = bind(customFunction, elem);\n        const requestMethods = {get: customFunction, delete: customFunction};\n        each(['put', 'patch', 'post'], function (name) {\n          requestMethods[name] = function (operation, element, path, params, headers) {\n            return bind(customFunction, this)(operation, path, params, headers, element);\n          };\n        });\n        each(requestMethods, function (requestFunc, name) {\n          const callOperation = name === 'delete' ? 'remove' : name;\n          each(['do', 'custom'], function (alias) {\n            elem[alias + name.toUpperCase()] = bind(requestFunc, elem, callOperation);\n          });\n        });\n        elem[config.restangularFields.customGETLIST] = bind(fetchFunction, elem);\n        elem[config.restangularFields.doGETLIST] = elem[config.restangularFields.customGETLIST];\n      }\n\n      function copyRestangularizedElement(fromElement, toElement = {}) {\n        const copiedElement = assign(toElement, fromElement);\n        return restangularizeElem(copiedElement[config.restangularFields.parentResource],\n          copiedElement, copiedElement[config.restangularFields.route], true);\n      }\n\n      function restangularizeElem(parent, element, route, fromServer?, collection?, reqParams?) {\n        const elem = config.onBeforeElemRestangularized(element, false, route);\n\n        const localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\n\n        if (config.useCannonicalId) {\n          localElem[config.restangularFields.cannonicalId] = config.getIdFromElem(localElem);\n        }\n\n        if (collection) {\n          localElem[config.restangularFields.getParentList] = function () {\n            return collection;\n          };\n        }\n\n        localElem[config.restangularFields.restangularCollection] = false;\n        localElem[config.restangularFields.get] = bind(getFunction, localElem);\n        localElem[config.restangularFields.getList] = bind(fetchFunction, localElem);\n        localElem[config.restangularFields.put] = bind(putFunction, localElem);\n        localElem[config.restangularFields.post] = bind(postFunction, localElem);\n        localElem[config.restangularFields.remove] = bind(deleteFunction, localElem);\n        localElem[config.restangularFields.head] = bind(headFunction, localElem);\n        localElem[config.restangularFields.trace] = bind(traceFunction, localElem);\n        localElem[config.restangularFields.options] = bind(optionsFunction, localElem);\n        localElem[config.restangularFields.patch] = bind(patchFunction, localElem);\n        localElem[config.restangularFields.save] = bind(save, localElem);\n\n        addCustomOperation(localElem);\n        return config.transformElem(localElem, false, route, service, true);\n      }\n\n      function restangularizeCollection(parent, element, route, fromServer?, reqParams?) {\n        const elem = config.onBeforeElemRestangularized(element, true, route);\n\n        const localElem = restangularizeBase(parent, elem, route, reqParams, fromServer);\n        localElem[config.restangularFields.restangularCollection] = true;\n        localElem[config.restangularFields.post] = bind(postFunction, localElem, null);\n        localElem[config.restangularFields.remove] = bind(deleteFunction, localElem);\n        localElem[config.restangularFields.head] = bind(headFunction, localElem);\n        localElem[config.restangularFields.trace] = bind(traceFunction, localElem);\n        localElem[config.restangularFields.putElement] = bind(putElementFunction, localElem);\n        localElem[config.restangularFields.options] = bind(optionsFunction, localElem);\n        localElem[config.restangularFields.patch] = bind(patchFunction, localElem);\n        localElem[config.restangularFields.get] = bind(getById, localElem);\n        localElem[config.restangularFields.getList] = bind(fetchFunction, localElem, null);\n\n        addCustomOperation(localElem);\n        return config.transformElem(localElem, true, route, service, true);\n      }\n\n      function restangularizeCollectionAndElements(parent, element, route) {\n        const collection = restangularizeCollection(parent, element, route, false);\n        each(collection, function (elem) {\n          if (elem) {\n            restangularizeElem(parent, elem, route, false);\n          }\n        });\n        return collection;\n      }\n\n      function getById(id, reqParams, headers) {\n        return this.customGET(id.toString(), reqParams, headers);\n      }\n\n      function putElementFunction(idx, params, headers) {\n        const __this = this;\n        const elemToPut = this[idx];\n        const subject = new BehaviorSubject(null);\n        let filledArray = [];\n        filledArray = config.transformElem(filledArray, true, elemToPut[config.restangularFields.route], service);\n\n        elemToPut.put(params, headers)\n        .subscribe(function (serverElem) {\n          const newArray = copyRestangularizedElement(__this);\n          newArray[idx] = serverElem;\n          filledArray = newArray;\n          subject.next(newArray);\n        }, function (response) {\n          subject.error(response);\n        }, function () {\n          subject.complete();\n        });\n\n        return restangularizeResponse(subject, true, filledArray);\n      }\n\n      function parseResponse(resData, operation, route, fetchUrl, response, subject) {\n        const data = config.responseExtractor(resData, operation, route, fetchUrl, response, subject);\n        const etag = response.headers.get('ETag');\n        if (data && etag) {\n          data[config.restangularFields.etag] = etag;\n        }\n        return data;\n      }\n\n      function fetchFunction(what, reqParams, headers) {\n        const __this = this;\n        const subject = new BehaviorSubject(null);\n        const operation = 'getList';\n        const url = urlHandler.fetchUrl(this, what);\n        const whatFetched = what || __this[config.restangularFields.route];\n\n        const request = config.fullRequestInterceptor(null, operation,\n          whatFetched, url, headers || {}, reqParams || {}, this[config.restangularFields.httpConfig] || {});\n\n        let filledArray = [];\n        filledArray = config.transformElem(filledArray, true, whatFetched, service);\n\n        let method = 'getList';\n\n        if (config.jsonp) {\n          method = 'jsonp';\n        }\n\n        const okCallback = function (response) {\n          const resData = response.body;\n          const fullParams = response.config.params;\n          let data = parseResponse(resData, operation, whatFetched, url, response, subject);\n\n          // support empty response for getList() calls (some APIs respond with 204 and empty body)\n          if (isUndefined(data) || '' === data) {\n            data = [];\n          }\n          if (!isArray(data)) {\n            throw new Error('Response for getList SHOULD be an array and not an object or something else');\n          }\n\n          if (true === config.plainByDefault) {\n            return resolvePromise(subject, response, data, filledArray);\n          }\n\n          let processedData = map(data, function (elem) {\n            if (!__this[config.restangularFields.restangularCollection]) {\n              return restangularizeElem(__this, elem, what, true, data);\n            } else {\n              return restangularizeElem(__this[config.restangularFields.parentResource],\n                elem, __this[config.restangularFields.route], true, data);\n            }\n          });\n\n          processedData = extend(data, processedData);\n\n          if (!__this[config.restangularFields.restangularCollection]) {\n            resolvePromise(\n              subject,\n              response,\n              restangularizeCollection(\n                __this,\n                processedData,\n                what,\n                true,\n                fullParams\n              ),\n              filledArray\n            );\n          } else {\n            resolvePromise(\n              subject,\n              response,\n              restangularizeCollection(\n                __this[config.restangularFields.parentResource],\n                processedData,\n                __this[config.restangularFields.route],\n                true,\n                fullParams\n              ),\n              filledArray\n            );\n          }\n        };\n\n        urlHandler.resource(this, $http, request.httpConfig, request.headers, request.params, what,\n          this[config.restangularFields.etag], operation)[method]()\n        .subscribe(okCallback, function error(response) {\n          if (response.status === 304 && __this[config.restangularFields.restangularCollection]) {\n            resolvePromise(subject, response, __this, filledArray);\n          } else if (every(config.errorInterceptors, function (cb: any) {\n\n            return cb(response, subject, okCallback) !== false;\n          })) {\n            // triggered if no callback returns false\n            subject.error(response);\n          }\n        });\n\n        return restangularizeResponse(subject, true, filledArray);\n      }\n\n      function withHttpConfig(httpConfig) {\n        this[config.restangularFields.httpConfig] = httpConfig;\n        return this;\n      }\n\n      function save(params, headers) {\n        if (this[config.restangularFields.fromServer]) {\n          return this[config.restangularFields.put](params, headers);\n        } else {\n          return bind(elemFunction, this)('post', undefined, params, undefined, headers);\n        }\n      }\n\n      function elemFunction(operation, what, params, obj, headers) {\n        const __this = this;\n        const subject = new BehaviorSubject(null);\n        const resParams = params || {};\n        const route = what || this[config.restangularFields.route];\n        const fetchUrl = urlHandler.fetchUrl(this, what);\n\n        let callObj = obj || this;\n        // fallback to etag on restangular object (since for custom methods we probably don't explicitly specify the etag field)\n        const etag = callObj[config.restangularFields.etag] || (operation !== 'post' ? this[config.restangularFields.etag] : null);\n\n        if (isObject(callObj) && config.isRestangularized(callObj)) {\n          callObj = stripRestangular(callObj);\n        }\n        const request = config.fullRequestInterceptor(\n          callObj,\n          operation,\n          route,\n          fetchUrl,\n          headers || {},\n          resParams || {},\n          this[config.restangularFields.httpConfig] || {}\n        );\n\n        let filledObject = {};\n        filledObject = config.transformElem(filledObject, false, route, service);\n\n        const okCallback = function (response) {\n          const resData = get(response, 'body');\n          const fullParams = get(response, 'config.params');\n\n          const elem = parseResponse(resData, operation, route, fetchUrl, response, subject);\n\n          if (elem) {\n            let data;\n            if (true === config.plainByDefault) {\n              return resolvePromise(subject, response, elem, filledObject);\n            }\n\n            if (operation === 'post' && !__this[config.restangularFields.restangularCollection]) {\n              data = restangularizeElem(\n                __this[config.restangularFields.parentResource],\n                elem,\n                route,\n                true,\n                null,\n                fullParams\n              );\n              resolvePromise(subject, response, data, filledObject);\n            } else {\n              data = restangularizeElem(\n                __this[config.restangularFields.parentResource],\n                elem,\n                __this[config.restangularFields.route],\n                true,\n                null,\n                fullParams\n              );\n\n              data[config.restangularFields.singleOne] = __this[config.restangularFields.singleOne];\n              resolvePromise(subject, response, data, filledObject);\n            }\n\n          } else {\n            resolvePromise(subject, response, undefined, filledObject);\n          }\n        };\n\n        const errorCallback = function (response) {\n          if (response.status === 304 && config.isSafe(operation)) {\n            resolvePromise(subject, response, __this, filledObject);\n          } else if (every(config.errorInterceptors, function (cb: any) {\n            return cb(response, subject, okCallback) !== false;\n          })) {\n            // triggered if no callback returns false\n            subject.error(response);\n          }\n        };\n        // Overriding HTTP Method\n        let callOperation = operation;\n        let callHeaders = extend({}, request.headers);\n        const isOverrideOperation = config.isOverridenMethod(operation);\n        if (isOverrideOperation) {\n          callOperation = 'post';\n          callHeaders = extend(callHeaders, {'X-HTTP-Method-Override': operation === 'remove' ? 'DELETE' : operation.toUpperCase()});\n        } else if (config.jsonp && callOperation === 'get') {\n          callOperation = 'jsonp';\n        }\n\n        if (config.isSafe(operation)) {\n          if (isOverrideOperation) {\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n              what, etag, callOperation)[callOperation]({}).subscribe(okCallback, errorCallback);\n          } else {\n            urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n              what, etag, callOperation)[callOperation]().subscribe(okCallback, errorCallback);\n          }\n        } else {\n          urlHandler.resource(this, $http, request.httpConfig, callHeaders, request.params,\n            what, etag, callOperation)[callOperation](request.element).subscribe(okCallback, errorCallback);\n        }\n\n        return restangularizeResponse(subject, false, filledObject);\n      }\n\n      function getFunction(params, headers) {\n        return bind(elemFunction, this)('get', undefined, params, undefined, headers);\n      }\n\n      function deleteFunction(params, headers) {\n        return bind(elemFunction, this)('remove', undefined, params, undefined, headers);\n      }\n\n      function putFunction(params, headers) {\n        return bind(elemFunction, this)('put', undefined, params, undefined, headers);\n      }\n\n      function postFunction(what, elem, params, headers) {\n        return bind(elemFunction, this)('post', what, params, elem, headers);\n      }\n\n      function headFunction(params, headers) {\n        return bind(elemFunction, this)('head', undefined, params, undefined, headers);\n      }\n\n      function traceFunction(params, headers) {\n        return bind(elemFunction, this)('trace', undefined, params, undefined, headers);\n      }\n\n      function optionsFunction(params, headers) {\n        return bind(elemFunction, this)('options', undefined, params, undefined, headers);\n      }\n\n      function patchFunction(elem, params, headers) {\n        return bind(elemFunction, this)('patch', undefined, params, elem, headers);\n      }\n\n      function customFunction(operation, path, params, headers, elem) {\n        return bind(elemFunction, this)(operation, path, params, elem, headers);\n      }\n\n      function addRestangularMethodFunction(name, operation, path, defaultParams, defaultHeaders, defaultElem) {\n        let bindedFunction;\n        if (operation === 'getList') {\n          bindedFunction = bind(fetchFunction, this, path);\n        } else {\n          bindedFunction = bind(customFunction, this, operation, path);\n        }\n\n        const createdFunction = function (params, headers, elem) {\n          const callParams = defaults({\n            params: params,\n            headers: headers,\n            elem: elem\n          }, {\n            params: defaultParams,\n            headers: defaultHeaders,\n            elem: defaultElem\n          });\n          return bindedFunction(callParams.params, callParams.headers, callParams.elem);\n        };\n\n        if (config.isSafe(operation)) {\n          this[name] = createdFunction;\n        } else {\n          this[name] = function (elem, params, headers) {\n            return createdFunction(params, headers, elem);\n          };\n        }\n      }\n\n      function withConfigurationFunction(configurer) {\n        const newConfig = clone(omit(config, 'configuration'));\n        RestangularConfigurer(newConfig, newConfig);\n        configurer(newConfig);\n        return createServiceForConfiguration(newConfig);\n      }\n\n      function toService(route, parent) {\n        const knownCollectionMethods = values(config.restangularFields);\n        const serv: any = {};\n        const collection = (parent || service).all(route);\n        serv.one = bind(one, (parent || service), parent, route);\n        serv.all = bind(collection.all, collection);\n        serv.post = bind(collection.post, collection);\n        serv.getList = bind(collection.getList, collection);\n        serv.withHttpConfig = bind(collection.withHttpConfig, collection);\n        serv.get = bind(collection.get, collection);\n\n        for (const prop in collection) {\n          if (collection.hasOwnProperty(prop) && isFunction(collection[prop]) && !includes(knownCollectionMethods, prop)) {\n            serv[prop] = bind(collection[prop], collection);\n          }\n        }\n\n        return serv;\n      }\n\n      RestangularConfigurer(service, config);\n\n      service.copy = bind(copyRestangularizedElement, service);\n\n      service.service = bind(toService, service);\n\n      service.withConfig = bind(withConfigurationFunction, service);\n\n      service.one = bind(one, service, null);\n\n      service.all = bind(all, service, null);\n\n      service.several = bind(several, service, null);\n\n      service.oneUrl = bind(oneUrl, service, null);\n\n      service.allUrl = bind(allUrl, service, null);\n\n      service.stripRestangular = bind(stripRestangular, service);\n\n      service.restangularizeElement = bind(restangularizeElem, service);\n\n      service.restangularizeCollection = bind(restangularizeCollectionAndElements, service);\n\n      return service;\n    }\n\n    return createServiceForConfiguration(globalConfiguration);\n  }\n\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf, InjectionToken } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RESTANGULAR, RestangularFactory } from './ngx-restangular.config';\nimport { Restangular } from './ngx-restangular';\nimport { RestangularHttp } from './ngx-restangular-http';\n\nexport const CONFIG_OBJ = new InjectionToken<string>('configObj');\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [RestangularHttp, Restangular]\n})\nexport class RestangularModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: RestangularModule) {\n    if (parentModule) {\n      throw new Error(\n        'RestangularModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(configFunction?: (provider: any, ...arg: any[]) => void): ModuleWithProviders<any>;\n  static forRoot(providers?: any[], configFunction?: (provider: any, ...arg: any[]) => void): ModuleWithProviders<any>;\n  static forRoot(config1?, config2?): ModuleWithProviders<any> {\n    return {\n      ngModule: RestangularModule,\n      providers: [\n        {provide: CONFIG_OBJ, useValue: [config1, config2]},\n        {provide: RESTANGULAR, useFactory: RestangularFactory, deps: [CONFIG_OBJ]},\n      ]\n    };\n  }\n\n}\n"]}